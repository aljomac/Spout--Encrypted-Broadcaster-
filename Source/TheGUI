import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidParameterSpecException;

import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class TheGUI extends Frame implements ActionListener
{
	private TextField userTextField;
	private JTextArea chatDisplay;
	private JScrollPane scrollPane;
	public static JButton sendButton;
	private static JFrame f;
	private JPanel panel;

	
	Action accept = new AbstractAction("accept"){

		public void actionPerformed(ActionEvent arg0) {
			try {
				if(TCPClient.isUsernameSet() == false){
					TCPClient.setUserName(GetUserInput());
					userTextField.setText("");
					TCPClient.SetSrvIP(null);
				}
				
				if(TCPClient.isSuspendAll() == false && TCPClient.isUsernameSet() == true){//this is where that suspendAll thing also comes into play.
					if(TCPClient.getIsSrvSet() == false)//this is for when the client asks to set the IP
					{
						TCPClient.SetSrvIP(GetUserInput());
						userTextField.setText("");
					}
					else //If not it does the sendMessage to all clients instead.
					{
						TCPClient.SendMessage();
						chatDisplay.setCaretPosition(chatDisplay.getDocument().getLength());
						userTextField.setText("");
					}	
				}
				
				//Down here to skip the client thinking that on the first enter press
				//that we want to set the server to null.
				TCPClient.setUsernameSet(true);
			}
			catch (InvalidKeyException e1) {
				e1.printStackTrace();
			}
			catch (IllegalBlockSizeException e1) { 
				e1.printStackTrace();
			}
			catch (BadPaddingException e1) {
				e1.printStackTrace();
			}
			catch (InvalidAlgorithmParameterException e1) {
				e1.printStackTrace();
			}
			catch (InvalidParameterSpecException e1) {
				e1.printStackTrace();
			}
			catch (NoSuchAlgorithmException e1) {
				e1.printStackTrace();
			}
			catch (NoSuchPaddingException e1) {
				e1.printStackTrace();
			}
			catch (IOException e1) {
				e1.printStackTrace();
			}
			
		}
	};
	
	
	@SuppressWarnings("deprecation")
	public TheGUI()
	{

		//General Settings
		setLayout(new BorderLayout());
		
		f = new JFrame("Shout - v0.9");
		f.setVisible(true);
		f.setPreferredSize(new Dimension(500, 350));
		panel = new JPanel();
		
		chatDisplay = new JTextArea(5,5);
		chatDisplay.setEditable(false);
		scrollPane = new JScrollPane(chatDisplay);
		setPreferredSize(new Dimension(450, 110));
		f.getContentPane().add(scrollPane, BorderLayout.CENTER);
		
		f.getContentPane().add("South", userTextField = new TextField());
		f.getContentPane().add(sendButton = new JButton(accept), BorderLayout.LINE_START);
		f.getRootPane().setDefaultButton(sendButton);
		sendButton.setVisible(false);
		f.pack();
		userTextField.requestFocus();
		setSize(600, 400);
		setTitle("");
	}
	
	protected JTextArea getChatDisplay(){
		return chatDisplay;
	}
	
	protected void setChatDisplay(String input)
	{
		chatDisplay.append(input);
	}
	
	protected JPanel getPanel()
	{
		return panel;
	}
	
	
	protected String GetUserInput(){
		return userTextField.getText();
	}
	

	JButton theButton = new JButton(accept);
	

	public void actionPerformed(ActionEvent arg0) {

	}
}
